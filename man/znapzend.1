.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ZNAPZEND 1"
.TH ZNAPZEND 1 "2018-04-13" "0.19.0" "znapzend"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
znapzend \- znapzend daemon
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBznapzend\fR [\fIoptions\fR...]
.PP
.Vb 10
\& \-\-man                  show man\-page and exit
\& \-\-version              print version and exit
\& \-h,\-\-help              display this help and exit
\& \-d,\-\-debug             print debug messages to STDERR
\& \-n,\-\-noaction          run in simulation mode. does no changes to the filesystem
\& \-\-nodestroy            does all changes to the filesystem except destroy
\& \-\-logto=x              select where to log to (syslog::<facility> or <filepath>)
\& \-\-loglevel=x           define the log level when logging to file
\& \-\-pidfile=x            write a pid file when running in daemon mode
\& \-\-daemonize            fork into the background
\& \-\-runonce=[x]          run one round on the optionally provided dataset
\& \-\-features=x           comma separated list of features to be enabled
\& \-\-rootExec=x           exec zfs with this command to obtain root privileges (sudo or pfexec)
\& \-\-connectTimeout=x     sets the ConnectTimeout for ssh commands
\& \-\-autoCreation         automatically create dataset on dest if it not exists
\& \-\-timeWarp=x           shift znapzends sens of NOW into the future by x seconds
\& \-\-skipOnPreSnapCmdFail skip snapshots if the pre\-snap\-command fails
\& \-\-skipOnPreSendCmdFail skip replication if the pre\-send\-command fails
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
ZnapZend is a snapshot based zfs backup daemon creating snapshots on a
scheduled basis on the source filesystem and on destination filesystems.
.PP
ZnapZend reads its configuration from custom properties in the fileset. Use
znapzendzetup to set these properties.
.IP "\fB\-d\fR, \fB\-\-debug\fR" 4
.IX Item "-d, --debug"
talk a lot while running. Sends debug messages to stderr.
.IP "\fB\-n\fR, \fB\-\-noaction\fR" 4
.IX Item "-n, --noaction"
don't do any actions which have lasting effect. Ideal to try our new new
configurations together with \fB\-\-debug\fR
.IP "\fB\-\-nodestroy\fR" 4
.IX Item "--nodestroy"
do all changes to the filesystem except destroy old snapshots
.IP "\fB\-\-logto\fR={\fBsyslog::\fR\fIfacility\fR|\fIfilepath\fR}" 4
.IX Item "--logto={syslog::facility|filepath}"
send logs out to either syslog or a logfile. Default is to send logs to
\&\fBsyslog::daemon\fR when runing daemonized. When running in debug mode, the
logs will go to \s-1STDERR\s0 by default.
.Sp
Examples:
.Sp
.Vb 2
\& \-\-logto=/var/log/znapzend.log
\& \-\-logto=syslog::daemon
.Ve
.IP "\fB\-\-loglevel\fR={\fBdebug\fR|\fBinfo\fR|\fBwarning\fR|\fBerr\fR|\fBalert\fR}" 4
.IX Item "--loglevel={debug|info|warning|err|alert}"
Define the log level when logging to file. Default is debug.
.IP "\fB\-\-pidfile\fR=\fIpath\fR" 4
.IX Item "--pidfile=path"
write a pid file when running in daemon mode
\&\fBpidfile\fR defaults to \fI/var/run/znapzend.pid\fR if no pidfile is given
.IP "\fB\-\-daemonize\fR" 4
.IX Item "--daemonize"
Fork into the background.
.IP "\fB\-\-runonce\fR=[\fIdataset\fR]" 4
.IX Item "--runonce=[dataset]"
run one round on source \fIdataset\fR or on all datasets if empty.
This is very useful for testing. Use it in connection with \fB\-\-noaction\fR and
\&\fB\-\-debug\fR while testing your new configuration
.IP "\fB\-\-features\fR=\fIfeature1\fR,\fIfeature2\fR,..." 4
.IX Item "--features=feature1,feature2,..."
enables enhanced zfs features not supported by all zfs implementations.
Do not enable features unless you are sure your zfs supports it
.Sp
Available features:
.RS 4
.IP "oracleMode" 4
.IX Item "oracleMode"
working around the following zfs issues we have seen on oracle:
.RS 4
.IP "\(bu" 4
The multi snapshot destroy syntax is not available. So stick to destroying
them individually.
.IP "\(bu" 4
Sometimes a snapshot can not be destroyed because of some oracle zfs bug.
Only a reeboot seems to be able to fix this. So we just destroy the ones we
can destroy. Logging an error about the problem
.RE
.RS 4
.RE
.IP "recvu" 4
.IX Item "recvu"
use the \-u option on the receive end, to keep the destination zfs
filesystems unmounted.
.IP "compressed" 4
.IX Item "compressed"
use 'compressed' to add options \-Lce to the zfs send command
If a source and destination volume are both using compression, zfs send will, by
default, decompress the data before sending. Zfs recv will then compress it again before
writing it to disk. Using \-c will skip the unnecessary decompress-compress stages.
This decreases \s-1CPU\s0 load on both source and destination as well as reduce network
bandwidth. The \-L option is for large block support and \-e is for embedded data support.
.RE
.RS 4
.RE
.IP "\fB\-\-rootExec\fR={sudo|pfexec}" 4
.IX Item "--rootExec={sudo|pfexec}"
Execute zfs with this command, 'sudo' or 'pfexec', to
obtain root privileges. This is often necessary when running znapzend as a
non-privileged user with a zfs install that doesn't support finer permission
controls. This also applies to the zfs commands ran on remote servers over ssh.
.Sp
For sudo, the /etc/sudoers file will need to be modified to allow for
passwordless access to zfs commands if znapzend is to be ran as a daemon or
the system will be used as a remote. Many \s-1ZFS\s0 installations include an
/etc/sudoers.d/zfs file as an example.
.IP "\fB\-\-connectTimeout\fR=\fItimeout\fR" 4
.IX Item "--connectTimeout=timeout"
sets the ssh connection timeout (in seconds)
.IP "\fB\-\-autoCreation\fR" 4
.IX Item "--autoCreation"
Automatically create a dataset on a destination host if it's not there yet.
.IP "\fB\-\-timeWarp\fR=x" 4
.IX Item "--timeWarp=x"
Shift ZnapZends sense of time into the future by x seconds.
.Sp
The practical application if this function is to determine what will happen at some future point in time.
This can be useful for testing but also when running in noaction and debug mode to determine which
snapshots would be created and removed at some future point in time.
.IP "\fB\-\-skipOnPreSnapCmdFail\fR" 4
.IX Item "--skipOnPreSnapCmdFail"
Prevent snapshots of a dataset from being taken when it has a pre-snap-command
defined and the command returns a non-zero exit code or is killed by a signal.
.IP "\fB\-\-skipOnPreSendCmdFail\fR" 4
.IX Item "--skipOnPreSendCmdFail"
Prevent snapshots of a dataset from being replicated to a destination when it has
a pre-snap-command defined and the command returns a non-zero exit code or is killed
by a signal.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
To test a new config
.PP
.Vb 1
\& znapzend \-\-debug \-\-noaction \-\-runonce=tank/test
.Ve
.PP
To see what is going to happen in one hour
.PP
.Vb 1
\& znapzend \-\-debug \-\-noaction \-\-timeWarp=3600 \-\-runonce=tank/test
.Ve
.PP
To run as a daemon
.PP
.Vb 1
\& znapzend \-\-daemonize \-\-pidfile=/var/run/znapzend.pid \-\-logto=syslog::daemon
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2014 by \s-1OETIKER+PARTNER AG.\s0 All rights reserved.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software: you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT
ANY WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or
\&\s-1FITNESS FOR A PARTICULAR PURPOSE.\s0 See the \s-1GNU\s0 General Public License for
more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tobias\ Oetiker\ <tobi@oetiker.ch>,
Dominik\ Hassler\ <hadfl@cpan.org>
.SH "HISTORY"
.IX Header "HISTORY"
.Vb 2
\& 2014\-06\-01 had Multi destination backup
\& 2014\-05\-30 had Initial Version
.Ve
